type Query {
    beers(filter: String, skip: Int, take: Int, orderBy: BeerOrder): [Beer!]!
}

type Mutation {
    rateBeer(beerId: ID!, rating: Int!): Beer
}

type Beer {
    id: ID!
    brand: Brand!
    name: String!
    type: Type!
    abv: Float!
    rating: Float
}

type Brand {
    id: ID!
    name: String!
}

type Type {
    id: ID!
    name: String!
}

input BeerOrder {
    brand: Sort
    name: Sort
    type: Sort
    abv: Sort
    # rating: Sort
}

enum Sort {
    asc
    desc
}
